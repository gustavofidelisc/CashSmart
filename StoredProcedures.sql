IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_SALDO_ATUAL_USUARIO')
	BEGIN 
		DROP PROCEDURE SP_SALDO_ATUAL_USUARIO
	END
GO

CREATE PROCEDURE SP_SALDO_ATUAL_USUARIO
@ID_USUARIO uniqueidentifier,
@DATA_ATUAL DATETIME
AS
BEGIN
	SELECT 
		SUM(valor) AS SALDO_ATUAL
	FROM 
		Transacoes
	INNER JOIN
		Categorias
	ON 
		Transacoes.CategoriaId = Categorias.Id
	WHERE 
		Transacoes.UsuarioId = @ID_USUARIO
		AND
		Transacoes.Data < @DATA_ATUAL
END
GO


IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_SALDOS_INFORMACOES_MES')
	BEGIN 
		DROP PROCEDURE SP_SALDOS_INFORMACOES_MES
	END
GO

CREATE PROCEDURE SP_SALDOS_INFORMACOES_MES
@ID_USUARIO uniqueidentifier,
@DATA_INICIAL DATETIME,
@DATA_FINAL DATETIME
AS
BEGIN
	SELECT 
		Transacoes.UsuarioId,
		SUM(CASE WHEN Categorias.TipoTransacao = '1' THEN valor ELSE 0 END) AS TOTAL_RECEITA,
		SUM(CASE WHEN Categorias.TipoTransacao = '2' THEN valor ELSE 0 END) AS TOTAL_DESPESA
	FROM 
		Transacoes
	INNER JOIN
		Categorias
	ON 
		Transacoes.CategoriaId = Categorias.Id
	WHERE 
		Transacoes.UsuarioId = @ID_USUARIO
		AND
			Data BETWEEN @DATA_INICIAL AND @DATA_FINAL 
	GROUP BY
		Transacoes.UsuarioId;
END
GO



IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_INFORMACOES_GRAFICO_MES')
	BEGIN 
		DROP PROCEDURE SP_INFORMACOES_GRAFICO_MES
	END
GO

CREATE PROCEDURE SP_INFORMACOES_GRAFICO_MES
@ID_USUARIO uniqueidentifier,
@DATA_INICIAL DATETIME,
@DATA_FINAL DATETIME,
@TIPO_TRANSACAO int
AS 
BEGIN
	SELECT 
		Categorias.Nome AS Nomes, 
		SUM(Transacoes.Valor) AS Valores,
		Categorias.TipoTransacao
	FROM
		Transacoes
	INNER JOIN
		Categorias
	ON 
		Transacoes.CategoriaId = Categorias.Id
	WHERE 
		Transacoes.UsuarioId = @ID_USUARIO
		AND
			Data BETWEEN  @DATA_INICIAL AND @DATA_FINAL 
		AND
			Categorias.TipoTransacao = @TIPO_TRANSACAO
	GROUP BY
		Categorias.Nome, Categorias.TipoTransacao
END
GO


IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_DELETAR_CATEGORIA_E_TRANSACOES')
BEGIN 
    DROP PROCEDURE SP_DELETAR_CATEGORIA_E_TRANSACOES
END
GO

CREATE PROCEDURE SP_DELETAR_CATEGORIA_E_TRANSACOES
    @ID_CATEGORIA INT,
    @ID_USUARIO UNIQUEIDENTIFIER
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION;
			SET NOCOUNT ON;
    
			DELETE FROM Transacoes
			WHERE CategoriaId = @ID_CATEGORIA
			AND UsuarioId = @ID_USUARIO;
    
			DELETE FROM Categorias
			WHERE Id = @ID_CATEGORIA
			AND UsuarioId = @ID_USUARIO;
   
			COMMIT TRANSACTION;

			RETURN 0;
	END TRY
	BEGIN CATCH
		IF @@TRANCOUNT > 0
			ROLLBACK TRANSACTION;
		RETURN -1;
	END CATCH
END
GO



IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_DELETAR_FORMA_PAGAMENTO_E_TRANSACOES')
BEGIN 
    DROP PROCEDURE SP_DELETAR_FORMA_PAGAMENTO_E_TRANSACOES
END
GO

CREATE PROCEDURE SP_DELETAR_FORMA_PAGAMENTO_E_TRANSACOES
    @ID_FORMA_PAGAMENTO INT,
    @ID_USUARIO UNIQUEIDENTIFIER
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION;
			SET NOCOUNT ON;
    
			 DELETE FROM Transacoes
			 WHERE FormaPagamentoId = @ID_FORMA_PAGAMENTO
			 AND UsuarioId = @ID_USUARIO;
    
			DELETE FROM FormasPagamento
			WHERE Id = @ID_FORMA_PAGAMENTO
			AND UsuarioId = @ID_USUARIO;
    
			COMMIT TRANSACTION;
			RETURN 0;
		END TRY
		BEGIN CATCH
			IF @@TRANCOUNT > 0
				ROLLBACK TRANSACTION;
			RETURN -1;
		END CATCH
END
GO


IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE TYPE = 'P' AND NAME = 'SP_INFORMACOES_ANUAIS_POR_MESES_TRANSACOES')
BEGIN 
    DROP PROCEDURE SP_INFORMACOES_ANUAIS_POR_MESES_TRANSACOES
END
GO

CREATE PROCEDURE SP_INFORMACOES_ANUAIS_POR_MESES_TRANSACOES
    @ANO INT,
    @ID_USUARIO UNIQUEIDENTIFIER
AS
BEGIN
	SELECT 
		DATENAME(MONTH, Data) NOME_MES,
		SUM(Transacoes.Valor) As SALDO_MENSAL,
		SUM(CASE WHEN Categorias.TipoTransacao = '1' THEN valor ELSE 0 END) AS TOTAL_RECEITA,
		SUM(CASE WHEN Categorias.TipoTransacao = '2' THEN valor ELSE 0 END) AS TOTAL_DESPESA
	FROM Transacoes
	INNER JOIN
		Categorias
	ON 
		Categorias.Id = Transacoes.CategoriaId
	WHERE YEAR(Data) = @ANO
		AND 
		Transacoes.UsuarioId = @ID_USUARIO
	GROUP BY 
		DATENAME(MONTH, Data)
	ORDER BY NOME_MES ;
END


